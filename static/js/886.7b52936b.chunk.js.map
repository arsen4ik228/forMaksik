{"version":3,"file":"static/js/886.7b52936b.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/TextArea/TextArea.module.css?c32b","UI/Custom/TextArea/TextArea.jsx","webpack://good_management/./src/UI/app/StrategyPage/Strategy.module.css?5cac","UI/app/StrategyPage/Strategy.jsx","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/SelectBorder/SelectBorder.module.css?11b5","UI/Custom/SelectBorder/SelectBorder.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update}></ButtonAction>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"TextArea_textArea__W74x1\",\"textColor\":\"TextArea_textColor__B5yhy\"};","import React from \"react\";\nimport classes from \"./TextArea.module.css\";\n\nexport default function TextArea({ value, onChange, readOnly }) {\n  return (\n    <textarea\n      className={`${classes.textArea} ${readOnly ? classes.textColor : \"\"}`}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={readOnly}\n    ></textarea>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Strategy_dialog__dL8ZC\",\"header\":\"Strategy_header__rAeoI\",\"fon\":\"Strategy_fon__3PORZ\",\"pomoshnikSearch\":\"Strategy_pomoshnikSearch__YKmt8\",\"pomoshnik\":\"Strategy_pomoshnik__H6G+b\",\"iconBack\":\"Strategy_iconBack__Ye3kO\",\"search\":\"Strategy_search__vgnlW\",\"spanPomoshnik\":\"Strategy_spanPomoshnik__VlMoT\",\"editText\":\"Strategy_editText__4KWog\",\"two\":\"Strategy_two__f-PxZ\",\"iconSavetmp\":\"Strategy_iconSavetmp__wdrl6\",\"blockSelect\":\"Strategy_blockSelect__T1xf7\",\"option\":\"Strategy_option__WIMyM\",\"date\":\"Strategy_date__AwND-\",\"actionButton\":\"Strategy_actionButton__IvY1c\",\"iconAdd\":\"Strategy_iconAdd__rZGlO\",\"iconSave\":\"Strategy_iconSave__LsCOV\",\"image\":\"Strategy_image__N7Zxv\",\"itemName\":\"Strategy_itemName__KWt1T\",\"select\":\"Strategy_select__n89TH\",\"div\":\"Strategy_div__fuyAi\",\"main\":\"Strategy_main__jaz1m\",\"Teaxtaera\":\"Strategy_Teaxtaera__Pu+O+\",\"active\":\"Strategy_active__FQoSU\",\"completed\":\"Strategy_completed__ZFT0M\",\"draft\":\"Strategy_draft__I6Zhi\"};","import React, { useState, useEffect } from \"react\";\nimport classes from \"./Strategy.module.css\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport ModalWindow from \"@Custom/ModalWindow.jsx\";\nimport TextArea from \"@Custom/TextArea/TextArea.jsx\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport SelectBorder from \"@Custom/SelectBorder/SelectBorder\";\nimport Select from \"@Custom/Select/Select\";\nimport {useStrategyHook} from \"@hooks\";\n\nexport default function Strategy() {\n  const [number, setNumber] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [editorState, setEditorState] = useState(\"\");\n\n  const [postId, setPostId] = useState(null);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalDraft, setOpenModalDraft] = useState(false);\n\n  const {\n    reduxSelectedOrganizationId,\n\n    // Получить все стратегии\n    activeAndDraftStrategies,\n    archiveStrategies,\n    activeStrategyId,\n    hasDraftStrategies,\n    isLoadingStrategies,\n    isErrorStrategies,\n\n    // Создать стратегию\n    postStrategy,\n    isLoadingPostStrategyMutation,\n    isSuccessPostStrategyMutation,\n    isErrorPostStrategyMutation,\n    errorPostStrategyMutation,\n    localIsResponsePostStrategyMutation,\n\n    // Получить стратегию по id\n    currentStrategy,\n    currentStrategyState,\n    isLoadingStrategyId,\n    isFetchingStrategyId,\n    isErrorStrategyId,\n    \n\n    // Обновить стратегию\n    updateStrategy,\n    isLoadingUpdateStrategyMutation,\n    isSuccessUpdateStrategyMutation,\n    isErrorUpdateStrategyMutation,\n    errorUpdateStrategyMutation,\n    localIsResponseUpdateStrategyMutation\n  } = useStrategyHook(number);\n\n  const stateMapping = {\n    Черновик: [\"Активный\", \"Черновик\"],\n    Активный: [\"Активный\", \"Завершено\"],\n    Завершено: [\"Завершено\"],\n  };\n\n  const filteredArrayState = (stateMapping[currentStrategy.state] || []).map(\n    (id) => ({\n      id,\n      value: id,\n    })\n  );\n\n  const handleNumberOnChange = (e) => {\n    setNumber(e);\n  };\n\n  const newStrateg = () => {\n    if (hasDraftStrategies === true) {\n      setOpenModalDraft(true);\n    } else {\n      savePostStarteg();\n    }\n  };\n\n  const savePostStarteg = async () => {\n    await postStrategy({\n      content: \" \",\n      organizationId: reduxSelectedOrganizationId,\n    })\n      .unwrap()\n      .then((result) => {\n        setPostId(result.id);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const save = () => {\n    console.log(\"activeStrategyId\");\n    console.log(activeStrategyId);\n    if (\n      state === \"Активный\" &&\n      currentStrategy.state === \"Черновик\" &&\n      activeStrategyId\n    ) {\n      setOpenModal(true);\n    } else {\n      saveUpdateStrateg();\n    }\n  };\n\n  const saveUpdateStrateg = async () => {\n    const Data = [];\n    if (state !== \"\" && state !== currentStrategy.state) {\n      Data.state = state;\n    }\n    console.log(editorState);\n    if (editorState !== currentStrategy.content) {\n      Data.content = editorState;\n    }\n    await updateStrategy({\n      _id: number,\n      ...Data,\n    })\n      .unwrap()\n      .then(() => {\n        setOpenModal(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const btnYes = async () => {\n    await updateStrategy({\n      _id: activeStrategyId,\n      state: \"Завершено\",\n    })\n      .unwrap()\n      .then(() => {\n        saveUpdateStrateg();\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\n      });\n  };\n\n  const btnNo = async () => {\n    const Data = [];\n    if (editorState !== currentStrategy.content) {\n      Data.content = editorState;\n    }\n    if (Data.content) {\n      await updateStrategy({\n        _id: number,\n        ...Data,\n      })\n        .unwrap()\n        .then(() => {\n          setState(\"Черновик\");\n          setOpenModal(false);\n        })\n        .catch((error) => {\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n        });\n    } else {\n      setOpenModal(false);\n      setState(\"Черновик\");\n    }\n  };\n\n  useEffect(() => {\n    if (postId !== null) {\n      setNumber(postId);\n    }\n  }, [postId]);\n\n  useEffect(() => {\n    if (currentStrategy.content) {\n      setEditorState(currentStrategy.content);\n    }\n\n    if (currentStrategy.state) {\n      setState(currentStrategy.state);\n    }\n  }, [currentStrategy.id]);\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"стратегия\"}>\n        <BottomHeaders create={newStrateg} update={save}>\n          <SelectBorder\n            value={number}\n            onChange={handleNumberOnChange}\n            array={activeAndDraftStrategies}\n            array1={archiveStrategies}\n            arrayItem={\"strategyNumber\"}\n            prefix={\"Стратегия №\"}\n            styleSelected={currentStrategyState}\n          ></SelectBorder>\n          {number && (\n            <Select\n              name={\"Состояние\"}\n              value={state}\n              onChange={setState}\n              array={filteredArrayState}\n              arrayItem={\"value\"}\n              disabledPole={currentStrategy.state === \"Завершено\"}\n            ></Select>\n          )}\n        </BottomHeaders>\n      </Headers>\n\n      <div className={classes.main}>\n        {isErrorStrategies ? (\n          <>\n            <HandlerQeury Error={true}></HandlerQeury>\n          </>\n        ) : (\n          <>\n            {isErrorStrategyId ? (\n              <HandlerQeury Error={isErrorStrategyId}></HandlerQeury>\n            ) : (\n              <>\n                <HandlerQeury Loading={isLoadingStrategies}></HandlerQeury>\n\n                {isLoadingStrategyId || isFetchingStrategyId ? (\n                  <HandlerQeury\n                    Loading={isLoadingStrategyId}\n                    Fetching={isFetchingStrategyId}\n                  ></HandlerQeury>\n                ) : (\n                  <>\n                    {currentStrategy.id ? (\n                      <>\n                        <TextArea\n                          key={currentStrategy.id}\n                          value={editorState}\n                          onChange={setEditorState}\n                          readOnly={currentStrategy.state === \"Завершено\"}\n                        ></TextArea>\n\n                        <HandlerMutation\n                          Loading={isLoadingUpdateStrategyMutation}\n                          Error={isErrorUpdateStrategyMutation && localIsResponseUpdateStrategyMutation}\n                          Success= {isSuccessUpdateStrategyMutation && localIsResponseUpdateStrategyMutation}\n                          textSuccess={\"Стратегия обновлена\"}\n                          textError={\n                            errorUpdateStrategyMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? errorUpdateStrategyMutation.data.errors[0]\n                                  .errors[0]\n                              : errorUpdateStrategyMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingPostStrategyMutation}\n                          Error={isErrorPostStrategyMutation && localIsResponsePostStrategyMutation}\n                          Success={ isSuccessPostStrategyMutation && localIsResponsePostStrategyMutation }\n                          textSuccess={\"Стратегия успешно создана.\"}\n                          textError={\n                            errorPostStrategyMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? errorPostStrategyMutation.data.errors[0]\n                                  .errors[0]\n                              : errorPostStrategyMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n                      </>\n                    ) : (\n                      <>\n                        <WaveLetters\n                          letters={\"Выберите стратегию\"}\n                        ></WaveLetters>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n        {openModal ? (\n          <ModalWindow\n            text={\n              \"У Вас уже есть Активная стратегия, при нажатии на Да, Она будет завершена.\"\n            }\n            close={setOpenModal}\n            btnYes={btnYes}\n            btnNo={btnNo}\n          ></ModalWindow>\n        ) : (\n          <></>\n        )}\n\n        {openModalDraft ? (\n          <ModalWindow\n            text={\"У Вас уже есть Черновик стратегии\"}\n            close={setOpenModalDraft}\n            exitBtn={true}\n          ></ModalWindow>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__ukhRp\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__6zWsf\",\"modalRow1\":\"ModalWindow_modalRow1__pu+1f\",\"modalRow2\":\"ModalWindow_modalRow2__KBA6s\",\"btnYes\":\"ModalWindow_btnYes__g3eEP\",\"btnNo\":\"ModalWindow_btnNo__0IBST\",\"textBtnYes\":\"ModalWindow_textBtnYes__bEP3u\",\"textBtnNo\":\"ModalWindow_textBtnNo__yJDBD\",\"text\":\"ModalWindow_text__YqzfM\",\"exitImage\":\"ModalWindow_exitImage__Bc2Og\"};","import React from \"react\";\nimport classes from \"./ModalWindow.module.css\";\nimport exit from \"../image/exitModal.svg\";\n\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\n  return (\n    <div className={classes.modalDelete}>\n      <div className={classes.modalDeleteElement}>\n        <img\n          src={exit}\n          alt=\"exit\"\n          className={classes.exitImage}\n          onClick={() => close(false)}\n        />\n        <div className={classes.modalRow1}>\n          <span className={classes.text}>{text}</span>\n        </div>\n        {!exitBtn && (\n          <div className={classes.modalRow2}>\n            <button\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\n              onClick={btnYes}\n            >\n              Да\n            </button>\n            <button\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\n              onClick={btnNo}\n            >\n              Нет\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SelectBorder_item__DiOvO\",\"select\":\"SelectBorder_select__1QGX7\",\"Активный\":\"SelectBorder_Активный__LTOt8\",\"Черновик\":\"SelectBorder_Черновик__fMOp0\",\"Завершено\":\"SelectBorder_Завершено__buugC\"};","import React from \"react\";\nimport classes from \"./SelectBorder.module.css\";\n\nexport default function SelectBorder({\n  value,\n  onChange,\n  array,\n  array1,\n  arrayItem,\n  prefix,\n  styleSelected\n}) {\n\n  return (\n    <div className={classes.item}>\n      <select\n        name=\"mySelect\"\n        value={value}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n        className={`${classes.select} ${classes[styleSelected]}`}\n      >\n        <option value=\"\" disabled>\n          Выберите стратегию\n        </option>\n\n        {array?.map((item) => (\n          <>\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          </>\n        ))}\n\n        {array1?.map((item) => {\n          return (\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n"],"names":["ButtonAction","_ref","create","update","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","TextArea","value","onChange","readOnly","textArea","textColor","e","target","disabled","Strategy","_errorUpdateStrategyM","_errorUpdateStrategyM2","_errorUpdateStrategyM3","_errorUpdateStrategyM4","_errorUpdateStrategyM5","_errorPostStrategyMut","_errorPostStrategyMut2","_errorPostStrategyMut3","_errorPostStrategyMut4","_errorPostStrategyMut5","number","setNumber","useState","state","setState","editorState","setEditorState","postId","setPostId","openModal","setOpenModal","openModalDraft","setOpenModalDraft","reduxSelectedOrganizationId","activeAndDraftStrategies","archiveStrategies","activeStrategyId","hasDraftStrategies","isLoadingStrategies","isErrorStrategies","postStrategy","isLoadingPostStrategyMutation","isSuccessPostStrategyMutation","isErrorPostStrategyMutation","errorPostStrategyMutation","localIsResponsePostStrategyMutation","currentStrategy","currentStrategyState","isLoadingStrategyId","isFetchingStrategyId","isErrorStrategyId","updateStrategy","isLoadingUpdateStrategyMutation","isSuccessUpdateStrategyMutation","isErrorUpdateStrategyMutation","errorUpdateStrategyMutation","localIsResponseUpdateStrategyMutation","useStrategyHook","filteredArrayState","Черновик","Активный","Завершено","map","id","savePostStarteg","async","content","organizationId","unwrap","then","result","catch","error","console","JSON","stringify","saveUpdateStrateg","Data","log","_id","useEffect","dialog","Headers","newStrateg","save","SelectBorder","array","array1","arrayItem","prefix","styleSelected","Select","disabledPole","main","_Fragment","HandlerQeury","Error","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","data","errors","message","WaveLetters","letters","ModalWindow","text","close","btnYes","btnNo","exitBtn","modalDelete","modalDeleteElement","src","exit","alt","exitImage","modalRow1","modalRow2","textBtnYes","textBtnNo","item","select","arrayLetters","split","wave","index","style"],"sourceRoot":""}