{"version":3,"file":"static/js/149.3ae33237.chunk.js","mappings":"0IACA,SAAgB,SAAW,iCCA3B,GAAgB,QAAU,+B,2CCIX,SAASA,EAAYC,GAAsB,IAArB,OAAEC,EAAM,OAAEC,GAAQF,EACrD,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQC,QAAQC,SAAA,CAC7BN,IACCO,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACVC,KAAM,6CACNC,KAAMC,EAAAA,EACNC,QAASZ,IAIZC,IACCM,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACVC,KAAM,mDACNC,KAAMG,EAAAA,EACND,QAASX,MAKnB,CCrBe,SAASa,EAAaf,GAA8B,IAA7B,SAACO,EAAQ,OAAEN,EAAM,OAAEC,GAAOF,EAC9D,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQW,SAAST,SAAA,CAC5BA,GACDC,EAAAA,EAAAA,KAACT,EAAY,CAACE,OAAQA,EAAQC,OAAQA,MAG9C,C,0CCVA,SAAgB,SAAW,2BAA2B,UAAY,6B,aCEnD,SAASe,EAAQjB,GAAiC,IAAhC,MAAEkB,EAAK,SAAEC,EAAQ,SAAEC,GAAUpB,EAC5D,OACEQ,EAAAA,EAAAA,KAAA,YACEJ,UAAW,GAAGC,EAAQgB,YAAYD,EAAWf,EAAQiB,UAAY,KACjEJ,MAAOA,EACPC,SAAWI,GAAMJ,EAASI,EAAEC,OAAON,OACnCO,SAAUL,GAGhB,C,0CCXA,SAAgB,KAAO,2BAA2B,OAAS,6BAA6B,mDAAW,uEAA+B,mDAAW,uEAA+B,yDAAY,8E,aCEzK,SAASM,EAAY1B,GAQhC,IARiC,MACnCkB,EAAK,SACLC,EAAQ,MACRQ,EAAK,OACLC,EAAM,UACNC,EAAS,OACTC,EAAM,cACNC,GACD/B,EAEC,OACEQ,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAQ2B,KAAKzB,UAC3BJ,EAAAA,EAAAA,MAAA,UACEO,KAAK,WACLQ,MAAOA,EACPC,SAAWI,IACTJ,EAASI,EAAEC,OAAON,MAAM,EAE1Bd,UAAW,GAAGC,EAAQ4B,UAAU5B,EAAQ0B,KAAiBxB,SAAA,EAEzDC,EAAAA,EAAAA,KAAA,UAAQU,MAAM,GAAGO,UAAQ,EAAAlB,SAAC,4GAIpB,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOO,KAAKF,IACXxB,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,UACEJ,EAAAA,EAAAA,MAAA,UAAsBe,MAAOc,EAAKI,GAAIhC,UAAWC,EAAQ2B,EAAKK,OAAO9B,SAAA,CAClEuB,EACAE,EAAKH,KAFKG,EAAKI,QAOf,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQM,KAAKF,IAEV7B,EAAAA,EAAAA,MAAA,UAAsBe,MAAOc,EAAKI,GAAIhC,UAAWC,EAAQ2B,EAAKK,OAAO9B,SAAA,CAClEuB,EACAE,EAAKH,KAFKG,EAAKI,UAS9B,C,0CC9CA,SAAgB,KAAO,2B,aCCR,SAASE,EAAWtC,GAAe,IAAd,QAAEuC,GAASvC,EAC7C,MAAMwC,EAAeD,EAAQE,MAAM,IACnC,OACEjC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAQqC,KAAKnC,SACd,OAAZiC,QAAY,IAAZA,OAAY,EAAZA,EAAcN,KAAI,CAACF,EAAMW,KACxBnC,EAAAA,EAAAA,KAAA,QAAkBoC,MAAO,CAAE,MAAOD,EAAQ,GAAIpC,SAClC,MAATyB,EAAe,WAAsBA,GAD7BW,MAMnB,C,6DCZA,SAAgB,OAAS,0BAA0B,OAAS,0BAA0B,IAAM,uBAAuB,gBAAkB,mCAAmC,UAAY,6BAA6B,SAAW,4BAA4B,OAAS,0BAA0B,cAAgB,iCAAiC,SAAW,4BAA4B,IAAM,uBAAuB,IAAM,uBAAuB,MAAQ,yBAAyB,YAAc,+BAA+B,OAAS,0BAA0B,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,gBAAkB,mCAAmC,WAAa,8BAA8B,QAAU,2BAA2B,SAAW,4BAA4B,UAAY,6BAA6B,IAAM,uBAAuB,WAAa,8BAA8B,KAAO,wBAAwB,aAAe,gCAAgC,iBAAmB,oCAAoC,qBAAuB,wCAAwC,OAAS,0BAA0B,uBAAyB,0CAA0C,OAAS,0BAA0B,aAAe,gCAAgC,UAAY,6BAA6B,MAAQ,0B,8GCWxzC,SAASE,IAAa,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAClC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACxCC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,KAEtDG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,KAC9CK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAClDO,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAS,KAElDS,EAAeC,IAAoBV,EAAAA,EAAAA,UAAS,KAE7C,iBACJW,EAAgB,wBAChBC,EAAuB,sBACvBC,EAAqB,yBACrBC,EAAwB,gBAExBC,EAAe,iCACfC,EAAgC,iCAChCC,EAAgC,+BAChCC,EAA8B,6BAC9BC,EAA4B,uCAC5BC,IACEC,EAAAA,EAAAA,IAAiBpB,IAEf,yBACJqB,EAAwB,kBACxBC,EAAiB,oBACjBC,EAAmB,kBACnBC,IACEC,EAAAA,EAAAA,MAgBEC,EAAqBA,CAACrC,EAAOsC,EAAUC,KAC3C,OAAQA,GACN,IAAK,UACHzB,GAAmB0B,IACjB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQzC,GAASsC,EACVG,CAAO,IAEhB,MACF,IAAK,YACHzB,GAAqBwB,IACnB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQzC,GAASsC,EACVG,CAAO,IAEhB,MACF,IAAK,YACHvB,GAAqBsB,IACnB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQzC,GAASsC,EACVG,CAAO,IAKpB,EA2BF,OApBAC,EAAAA,EAAAA,YAAU,KACJC,MAAMC,QAAQvB,EAAiBwB,UACjC/B,EAAkBO,EAAiBwB,SAGjCF,MAAMC,QAAQvB,EAAiByB,YACjC9B,EAAoBK,EAAiByB,WAGnCH,MAAMC,QAAQvB,EAAiB0B,YACjC7B,EAAoBG,EAAiB0B,UACvC,GACC,CAAC1B,KAEJqB,EAAAA,EAAAA,YAAU,KACR,MACMM,EADQ,IAAIf,KAAsBD,GAClBiB,MAAM5D,GAASA,EAAKI,KAAOkB,IACjDS,EAAwB,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAAStD,MAAM,GAC/B,CAACiB,KAGFnD,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQwF,OAAOtF,SAAA,EAC7BJ,EAAAA,EAAAA,MAAC2F,EAAAA,EAAO,CAACpF,KAAM,0GAAsBqF,UAAW,YAAYxF,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAQ2F,aAAazF,SAClC,CAAC,oGAAqB,mDAAY,8CAAW2B,KAAI,CAAC+D,EAAMtD,KACvDnC,EAAAA,EAAAA,KAAA,OAEEJ,UAAW8F,IACT7F,EAAQ8F,iBACRhD,IAAgBR,GAAStC,EAAQ+F,wBAEnCvF,QAASA,IAAMuC,EAAeT,GAAOpC,UAErCC,EAAAA,EAAAA,KAAA,QACEJ,UAAW8F,IACT/C,IAAgBR,EACZtC,EAAQgG,OACRhG,EAAQiG,sBACZ/F,SAED0F,KAdEtD,QAmBXnC,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CAACb,OA3FOqG,gBACpBnC,EAAgB,CACpBoC,IAAKxC,EAAiB5B,GACtBqD,UAAW/B,EACX8B,QAAShC,EACTkC,UAAW9B,IAEV6C,SACAC,MAAK,SACLC,OAAOC,IACNC,QAAQD,MAAM,SAAUE,KAAKC,UAAUH,EAAO,KAAM,GAAG,GACvD,EAgF2CrG,UACzCC,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,CACXR,MAAOoC,EACPnC,SApDgBiB,IACxBmB,EAAsBnB,EAAG,EAoDjBT,MAAOgD,EACP/C,OAAQgD,EACR/C,UAAW,iBACXC,OAAQ,gEACRC,cAAe+B,UAKrBtD,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAQ2G,KAAKzG,SAC1B2D,GAAyBY,GACxBtE,EAAAA,EAAAA,KAACyG,EAAAA,EAAY,CAACC,MAAOhD,GAAyBY,IAC5CD,GACFV,GACAF,GACAzD,EAAAA,EAAAA,KAACyG,EAAAA,EAAY,CACXE,QAAStC,GAAuBZ,EAChCmD,SAAUjD,KAGZ3D,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,SACGyD,EAAiB5B,IAChBjC,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA5B,SAAA,CACmB,IAAhB4C,IACC3C,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,SACGiD,EAAetB,KAAI,CAACF,EAAMW,KACzBnC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAEPC,MAAOc,EACPb,SAAW8D,GACTD,EAAmBrC,EAAOsC,EAAU,WAEtC7D,SAA4B,2DAAlB0C,GALLnB,OAWI,IAAhBQ,IACC3C,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,SACGmD,EAAiBxB,KAAI,CAACF,EAAMW,KAC3BnC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAEPC,MAAOc,EACPb,SAAW8D,GACTD,EAAmBrC,EAAOsC,EAAU,aAEtC7D,SAA4B,2DAAlB0C,GALLnB,OAWI,IAAhBQ,IACC3C,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,SACGqD,EAAiB1B,KAAI,CAACF,EAAMW,KAC3BnC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAEPC,MAAOc,EACPb,SAAW8D,GACTD,EAAmBrC,EAAOsC,EAAU,aAEtC7D,SAA4B,2DAAlB0C,GALLnB,QAWbnC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAe,CACdF,QAAS9C,EACT6C,MACE3C,GACAE,EAEF6C,QACEhD,GACAG,EAEF8C,YAAa,iKACbC,UAC8B,OAA5BhD,QAA4B,IAA5BA,GAAkC,QAAN1B,EAA5B0B,EAA8BiD,YAAI,IAAA3E,GAAQ,QAARC,EAAlCD,EAAoC4E,cAAM,IAAA3E,GAAK,QAALC,EAA1CD,EAA6C,UAAE,IAAAC,GAAQ,QAARC,EAA/CD,EAAiD0E,cAAM,IAAAzE,GAAvDA,EAA0D,GACtDuB,EAA6BiD,KAAKC,OAAO,GAAGA,OAAO,GACvB,OAA5BlD,QAA4B,IAA5BA,GAAkC,QAANtB,EAA5BsB,EAA8BiD,YAAI,IAAAvE,OAAN,EAA5BA,EAAoCyE,cAK9CnH,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,UACEC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,CACVC,QAAS,oHAS3B,C","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/TextArea/TextArea.module.css?c32b","UI/Custom/TextArea/TextArea.jsx","webpack://good_management/./src/UI/Custom/SelectBorder/SelectBorder.module.css?11b5","UI/Custom/SelectBorder/SelectBorder.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/app/ObjectivePage/Objective.module.css?42cc","UI/app/ObjectivePage/Objective.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update}></ButtonAction>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"TextArea_textArea__W74x1\",\"textColor\":\"TextArea_textColor__B5yhy\"};","import React from \"react\";\nimport classes from \"./TextArea.module.css\";\n\nexport default function TextArea({ value, onChange, readOnly }) {\n  return (\n    <textarea\n      className={`${classes.textArea} ${readOnly ? classes.textColor : \"\"}`}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={readOnly}\n    ></textarea>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SelectBorder_item__DiOvO\",\"select\":\"SelectBorder_select__1QGX7\",\"Активный\":\"SelectBorder_Активный__LTOt8\",\"Черновик\":\"SelectBorder_Черновик__fMOp0\",\"Завершено\":\"SelectBorder_Завершено__buugC\"};","import React from \"react\";\nimport classes from \"./SelectBorder.module.css\";\n\nexport default function SelectBorder({\n  value,\n  onChange,\n  array,\n  array1,\n  arrayItem,\n  prefix,\n  styleSelected\n}) {\n\n  return (\n    <div className={classes.item}>\n      <select\n        name=\"mySelect\"\n        value={value}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n        className={`${classes.select} ${classes[styleSelected]}`}\n      >\n        <option value=\"\" disabled>\n          Выберите стратегию\n        </option>\n\n        {array?.map((item) => (\n          <>\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          </>\n        ))}\n\n        {array1?.map((item) => {\n          return (\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Objective_dialog__AGsZy\",\"header\":\"Objective_header__CwqH2\",\"fon\":\"Objective_fon__IHEX0\",\"pomoshnikSearch\":\"Objective_pomoshnikSearch__n+8mY\",\"pomoshnik\":\"Objective_pomoshnik__sapCt\",\"iconBack\":\"Objective_iconBack__8q8he\",\"search\":\"Objective_search__Bh658\",\"spanPomoshnik\":\"Objective_spanPomoshnik__y01xr\",\"editText\":\"Objective_editText__C2X+e\",\"one\":\"Objective_one__pBzSk\",\"two\":\"Objective_two__3V81z\",\"three\":\"Objective_three__aW0R0\",\"blockSelect\":\"Objective_blockSelect__srgvk\",\"option\":\"Objective_option__ep3vm\",\"date\":\"Objective_date__zCYXt\",\"image\":\"Objective_image__HulAZ\",\"main\":\"Objective_main__MdAhZ\",\"editorContainer\":\"Objective_editorContainer__Wu4S0\",\"deleteIcon\":\"Objective_deleteIcon__v66op\",\"iconAdd\":\"Objective_iconAdd__23qSh\",\"iconSave\":\"Objective_iconSave__W5qtA\",\"Teaxtaera\":\"Objective_Teaxtaera__NpKzL\",\"add\":\"Objective_add__gSb0u\",\"nameButton\":\"Objective_nameButton__729Uq\",\"text\":\"Objective_text__hBYIL\",\"selectHeader\":\"Objective_selectHeader__ijB6q\",\"textSelectHeader\":\"Objective_textSelectHeader__i6Y9X\",\"textSelectHeaderSpan\":\"Objective_textSelectHeaderSpan__KHO+H\",\"active\":\"Objective_active__BJlg2\",\"activeTextSelectHeader\":\"Objective_activeTextSelectHeader__EILz8\",\"select\":\"Objective_select__6UvrW\",\"activeSelect\":\"Objective_activeSelect__u1dA5\",\"completed\":\"Objective_completed__W6+iq\",\"draft\":\"Objective_draft__sHPg3\"};","import React, { useState, useEffect } from \"react\";\nimport classes from \"./Objective.module.css\";\nimport classNames from \"classnames\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport TextArea from \"@Custom/TextArea/TextArea.jsx\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport SelectBorder from \"@Custom/SelectBorder/SelectBorder\";\nimport { useObjectiveHook, useStrategyHook } from \"@hooks\";\n\nexport default function Objective() {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedStrategyId, setSelectedStrategyId] = useState(\"\");\n\n  const [contentEditors, setContentEditors] = useState([]);\n  const [situationEditors, setSituationEditors] = useState([]);\n  const [rootCauseEditors, setRootCauseEditors] = useState([]);\n\n  const [stateStrategy, setStateStrategy] = useState(\"\");\n\n  const {\n    currentObjective,\n    isLoadingGetObjectiveId,\n    isErrorGetObjectiveId,\n    isFetchingGetObjectiveId,\n\n    updateObjective,\n    isLoadingUpdateObjectiveMutation,\n    isSuccessUpdateObjectiveMutation,\n    isErrorUpdateObjectiveMutation,\n    errorUpdateObjectiveMutation,\n    localIsResponseUpdateObjectiveMutation,\n  } = useObjectiveHook(selectedStrategyId);\n\n  const {\n    activeAndDraftStrategies,\n    archiveStrategies,\n    isLoadingStrategies,\n    isErrorStrategies,\n  } = useStrategyHook();\n\n  const saveUpdateObjective = async () => {\n    await updateObjective({\n      _id: currentObjective.id,\n      situation: situationEditors,\n      content: contentEditors,\n      rootCause: rootCauseEditors,\n    })\n      .unwrap()\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Error:\", JSON.stringify(error, null, 2));\n      });\n  };\n\n  const handleEditorChange = (index, newState, type) => {\n    switch (type) {\n      case \"content\":\n        setContentEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      case \"situation\":\n        setSituationEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      case \"rootCause\":\n        setRootCauseEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeStrategyId = (id) => {\n    setSelectedStrategyId(id);\n  };\n\n  useEffect(() => {\n    if (Array.isArray(currentObjective.content)) {\n      setContentEditors(currentObjective.content);\n    }\n\n    if (Array.isArray(currentObjective.situation)) {\n      setSituationEditors(currentObjective.situation);\n    }\n\n    if (Array.isArray(currentObjective.rootCause)) {\n      setRootCauseEditors(currentObjective.rootCause);\n    }\n  }, [currentObjective]);\n\n  useEffect(() => {\n    const array = [...archiveStrategies, ...activeAndDraftStrategies];\n    const element = array.find((item) => item.id === selectedStrategyId);\n    setStateStrategy(element?.state);\n  }, [selectedStrategyId]);\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"Краткосрочная цель\"} speedGoal={\"speedGoal\"}>\n        <div className={classes.selectHeader}>\n          {[\"КРАТКОСРОЧАЯ ЦЕЛЬ\", \"СИТУАЦИЯ\", \"ПРИЧИНА\"].map((text, index) => (\n            <div\n              key={index}\n              className={classNames(\n                classes.textSelectHeader,\n                activeIndex === index && classes.activeTextSelectHeader\n              )}\n              onClick={() => setActiveIndex(index)}\n            >\n              <span\n                className={classNames(\n                  activeIndex === index\n                    ? classes.active\n                    : classes.textSelectHeaderSpan\n                )}\n              >\n                {text}\n              </span>\n            </div>\n          ))}\n        </div>\n        <BottomHeaders update={saveUpdateObjective}>\n          <SelectBorder\n            value={selectedStrategyId}\n            onChange={changeStrategyId}\n            array={activeAndDraftStrategies}\n            array1={archiveStrategies}\n            arrayItem={\"strategyNumber\"}\n            prefix={\"Стратегия №\"}\n            styleSelected={stateStrategy}\n          ></SelectBorder>\n        </BottomHeaders>\n      </Headers>\n\n      <div className={classes.main}>\n        {isErrorGetObjectiveId || isErrorStrategies ? (\n          <HandlerQeury Error={isErrorGetObjectiveId || isErrorStrategies} />\n        ) : isLoadingStrategies ||\n          isFetchingGetObjectiveId ||\n          isLoadingGetObjectiveId ? (\n          <HandlerQeury\n            Loading={isLoadingStrategies || isLoadingGetObjectiveId}\n            Fetching={isFetchingGetObjectiveId}\n          />\n        ) : (\n          <>\n            {currentObjective.id ? (\n              <>\n                {activeIndex === 0 && (\n                  <>\n                    {contentEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"content\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                {activeIndex === 1 && (\n                  <>\n                    {situationEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"situation\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                {activeIndex === 2 && (\n                  <>\n                    {rootCauseEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"rootCause\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                <HandlerMutation\n                  Loading={isLoadingUpdateObjectiveMutation}\n                  Error={\n                    isErrorUpdateObjectiveMutation &&\n                    localIsResponseUpdateObjectiveMutation\n                  }\n                  Success={\n                    isSuccessUpdateObjectiveMutation &&\n                    localIsResponseUpdateObjectiveMutation\n                  }\n                  textSuccess={\"Краткосрочная цель обновлена\"}\n                  textError={\n                    errorUpdateObjectiveMutation?.data?.errors?.[0]?.errors?.[0]\n                      ? errorUpdateObjectiveMutation.data.errors[0].errors[0]\n                      : errorUpdateObjectiveMutation?.data?.message\n                  }\n                />\n              </>\n            ) : (\n              <>\n                <WaveLetters\n                  letters={\"Выберите стратегию\"}\n                ></WaveLetters>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["ButtonAction","_ref","create","update","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","TextArea","value","onChange","readOnly","textArea","textColor","e","target","disabled","SelectBorder","array","array1","arrayItem","prefix","styleSelected","item","select","map","_Fragment","id","state","WaveLetters","letters","arrayLetters","split","wave","index","style","Objective","_errorUpdateObjective","_errorUpdateObjective2","_errorUpdateObjective3","_errorUpdateObjective4","_errorUpdateObjective5","activeIndex","setActiveIndex","useState","selectedStrategyId","setSelectedStrategyId","contentEditors","setContentEditors","situationEditors","setSituationEditors","rootCauseEditors","setRootCauseEditors","stateStrategy","setStateStrategy","currentObjective","isLoadingGetObjectiveId","isErrorGetObjectiveId","isFetchingGetObjectiveId","updateObjective","isLoadingUpdateObjectiveMutation","isSuccessUpdateObjectiveMutation","isErrorUpdateObjectiveMutation","errorUpdateObjectiveMutation","localIsResponseUpdateObjectiveMutation","useObjectiveHook","activeAndDraftStrategies","archiveStrategies","isLoadingStrategies","isErrorStrategies","useStrategyHook","handleEditorChange","newState","type","prevEditors","updated","useEffect","Array","isArray","content","situation","rootCause","element","find","dialog","Headers","speedGoal","selectHeader","text","classNames","textSelectHeader","activeTextSelectHeader","active","textSelectHeaderSpan","async","_id","unwrap","then","catch","error","console","JSON","stringify","main","HandlerQeury","Error","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","data","errors","message"],"sourceRoot":""}