{"version":3,"file":"static/js/235.cc4adb6d.chunk.js","mappings":"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","sources":["UI/image/blackStatistic.svg","webpack://good_management/./src/UI/Custom/Lupa/Lupa.module.css?5dc2","UI/Custom/Lupa/Lupa.jsx","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","UI/image/greyPolicy.svg","webpack://good_management/./src/UI/app/PostPage/Post.module.css?0714","webpack://good_management/./src/UI/Custom/modalSelectedStatistic/ModalSelectedStatistic.module.css?5e6a","UI/Custom/modalSelectedStatistic/ModalSelectedStatistic.jsx","UI/app/PostPage/Post.jsx","UI/image/subbarSearch.svg","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/Custom/modalSelectRadio/ModalSelectRadio.module.css?504c","UI/Custom/modalSelectRadio/ModalSelectRadio.jsx"],"sourcesContent":["var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBlackStatistic(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip55_2797\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \" icon / stats\",\n    width: 25,\n    height: 25,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \" icon / stats\",\n    width: 25,\n    height: 25,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip55_2797)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M14.92 11.86L14.51 10.96L13.61 10.55C13.12 10.32 13.12 9.64 13.61 9.41L14.51 9L14.92 8.11C15.15 7.62 15.84 7.62 16.06 8.11L16.47 9.01L17.36 9.42C17.85 9.65 17.85 10.34 17.36 10.56L16.46 10.97L16.05 11.86C15.84 12.35 15.14 12.35 14.92 11.86ZM4.8 14.36L5.21 13.46L6.11 13.05C6.6 12.82 6.6 12.14 6.11 11.91L5.21 11.51L4.8 10.61C4.59 10.12 3.89 10.12 3.67 10.61L3.26 11.51L2.36 11.92C1.87 12.14 1.87 12.84 2.36 13.05L3.26 13.46L3.67 14.36C3.89 14.85 4.59 14.85 4.8 14.36ZM9.17 9.36L9.79 8.04L11.11 7.42C11.6 7.2 11.6 6.51 11.11 6.29L9.79 5.69L9.17 4.36C8.96 3.87 8.26 3.87 8.05 4.36L7.44 5.69L6.11 6.3C5.62 6.51 5.62 7.21 6.11 7.42L7.44 8.04L8.05 9.36C8.26 9.85 8.96 9.85 9.17 9.36ZM22.91 9.36C22.52 9.01 21.94 9.05 21.59 9.44L15.2 16.62L12 13.42C11.51 12.94 10.72 12.94 10.24 13.42L4.29 19.39C3.92 19.75 3.92 20.35 4.29 20.71C4.65 21.07 5.25 21.07 5.61 20.71L11.11 15.2L14.34 18.42C14.85 18.94 15.67 18.91 16.15 18.37L22.99 10.69C23.34 10.3 23.3 9.7 22.91 9.36Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlackStatistic);\nexport default __webpack_public_path__ + \"static/media/blackStatistic.659864f0c6895a07680bbfc159823032.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Lupa_ul__62RG9\",\"li\":\"Lupa_li__pnKTR\",\"activeText\":\"Lupa_activeText__DK-A7\",\"completedText\":\"Lupa_completedText__68tEA\"};","import React, { useRef, useEffect } from \"react\";\nimport classes from \"./Lupa.module.css\";\nimport subbarSearch from \"../../image/subbarSearch.svg\";\n\nexport default function Lupa({\n  setIsOpenSearch,\n  isOpenSearch,\n  select,\n\n  projects,\n  archivesProjects,\n  projectsWithProgram,\n  archivesProjectsWithProgram,\n\n  programs,\n  archivesPrograms,\n\n  array,\n  arrayItem,\n  positionBottomStyle,\n}) {\n  const selectRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpenSearch(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div ref={selectRef}>\n      <img\n        src={subbarSearch}\n        alt=\"subbarSearch\"\n        onClick={() => {\n          setIsOpenSearch(true);\n        }}\n      />\n      {isOpenSearch && (\n        <ul\n          className={classes.ul}\n          style={{\n            bottom: positionBottomStyle,\n          }}\n        >\n          {projects?.length !== 0 && projects && (\n            <li value=\"Активные\" disabled className={classes.activeText}>\n              Активные\n            </li>\n          )}\n\n          {projects?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesProjects?.length !== 0 && archivesProjects && (\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\n              Завершенные\n            </li>\n          )}\n\n          {archivesProjects?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                className={classes.li}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {projectsWithProgram?.length !== 0 && projectsWithProgram && (\n            <li\n              value=\"Проекты с программами\"\n              disabled\n              className={classes.activeText}\n            >\n              Проекты с программами\n            </li>\n          )}\n\n          {projectsWithProgram?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesProjectsWithProgram?.length !== 0 &&\n            archivesProjectsWithProgram && (\n              <li\n                value=\"Архивные проекты с программами\"\n                disabled\n                className={classes.completedText}\n              >\n                Архивные проекты с программами\n              </li>\n            )}\n\n          {archivesProjectsWithProgram?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {programs?.length !== 0 && programs && (\n            <li value=\"Активные\" disabled className={classes.activeText}>\n              Активные\n            </li>\n          )}\n\n          {programs?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesPrograms?.length !== 0 && archivesPrograms && (\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\n              Завершенные\n            </li>\n          )}\n\n          {archivesPrograms?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {array?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item[arrayItem]}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update}></ButtonAction>\n    </div>\n  )\n}\n","var _desc, _defs, _rect, _rect2, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGreyPolicy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip77_1070\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar /attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar /attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip77_1070)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M4.33 1.33L19.66 1.33C20.21 1.33 20.66 1.78 20.66 2.33L20.66 21C20.66 21.55 20.21 22 19.66 22L4.33 22C3.78 22 3.33 21.55 3.33 21L3.33 2.33C3.33 1.78 3.78 1.33 4.33 1.33Z\",\n    fill: \"#FFFFFF\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M4.33 1.33L19.66 1.33C20.21 1.33 20.66 1.78 20.66 2.33L20.66 21C20.66 21.55 20.21 22 19.66 22L4.33 22C3.78 22 3.33 21.55 3.33 21L3.33 2.33C3.33 1.78 3.78 1.33 4.33 1.33ZM4.33 2.33L19.66 2.33L19.66 21L4.33 21L4.33 2.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 24\",\n    d: \"M8 7.33L16.66 7.33\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 25\",\n    d: \"M7.33 10L16.66 10\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 26\",\n    d: \"M7.33 12.66L16.66 12.66\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 27\",\n    d: \"M7.33 15.33L16.66 15.33\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M17.78 15.03L22.05 19.3C22.44 19.7 22.67 20.22 22.7 20.76C22.72 21.29 22.52 21.8 22.16 22.16C21.8 22.52 21.29 22.72 20.76 22.7C20.22 22.67 19.7 22.44 19.3 22.05L14.66 17.4C14.42 17.16 14.27 16.83 14.26 16.5C14.24 16.16 14.36 15.85 14.59 15.62C14.82 15.39 15.13 15.27 15.47 15.28C15.8 15.3 16.13 15.44 16.38 15.69L20.28 19.59C20.37 19.69 20.43 19.82 20.44 19.95C20.44 20.09 20.4 20.21 20.3 20.3C20.21 20.39 20.09 20.44 19.95 20.44C19.82 20.43 19.69 20.37 19.59 20.28L16.06 16.75L15.55 17.26L19.08 20.79C19.32 21.04 19.65 21.18 19.98 21.2C20.32 21.21 20.63 21.09 20.86 20.86C21.09 20.63 21.21 20.32 21.2 19.98C21.18 19.65 21.04 19.32 20.79 19.08L16.89 15.18C16.5 14.78 15.97 14.55 15.44 14.53C14.9 14.51 14.4 14.7 14.03 15.06C13.67 15.43 13.48 15.93 13.5 16.47C13.52 17 13.75 17.52 14.15 17.92L18.79 22.56C19.33 23.1 20.05 23.42 20.79 23.45C21.52 23.48 22.22 23.22 22.72 22.72C23.22 22.22 23.48 21.52 23.45 20.79C23.42 20.05 23.1 19.33 22.56 18.79L18.29 14.52L17.78 15.03Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M21.65 19.61L21.69 19.66C21.79 19.75 21.87 19.85 21.94 19.96C21.98 20.03 22.02 20.1 22.05 20.18C22.12 20.33 22.16 20.47 22.18 20.62C22.19 20.67 22.19 20.73 22.2 20.78C22.2 20.92 22.19 21.07 22.15 21.2C22.14 21.25 22.12 21.3 22.11 21.35C22.07 21.45 22.01 21.55 21.95 21.64C21.91 21.7 21.86 21.75 21.81 21.81C21.75 21.86 21.7 21.91 21.64 21.95C21.55 22.01 21.45 22.07 21.35 22.11C21.3 22.12 21.25 22.14 21.2 22.15C21.07 22.19 20.92 22.2 20.78 22.2C20.73 22.19 20.67 22.19 20.62 22.18C20.47 22.16 20.33 22.12 20.18 22.05C20.1 22.02 20.03 21.98 19.96 21.94C19.85 21.87 19.75 21.79 19.66 21.69L19.61 21.65C19.65 21.65 19.68 21.66 19.72 21.67C19.8 21.68 19.88 21.69 19.96 21.7C20.11 21.7 20.26 21.69 20.4 21.66C20.48 21.64 20.56 21.62 20.64 21.59C20.76 21.54 20.87 21.48 20.98 21.41C21.06 21.35 21.14 21.29 21.21 21.21C21.29 21.14 21.35 21.06 21.41 20.98C21.48 20.87 21.54 20.76 21.59 20.64C21.62 20.56 21.64 20.48 21.66 20.4C21.69 20.26 21.7 20.11 21.69 19.96C21.69 19.88 21.68 19.8 21.67 19.72C21.66 19.68 21.65 19.64 21.65 19.61ZM17.26 14.84L17.24 14.82C17.11 14.69 16.96 14.57 16.8 14.46C16.68 14.38 16.55 14.31 16.42 14.26C16.22 14.16 16.01 14.1 15.8 14.06C15.69 14.04 15.57 14.03 15.46 14.03C15.24 14.02 15.03 14.04 14.83 14.08C14.71 14.11 14.6 14.14 14.49 14.18C14.32 14.25 14.16 14.33 14.01 14.43C13.89 14.51 13.78 14.6 13.68 14.71C13.58 14.81 13.48 14.92 13.4 15.04C13.3 15.19 13.22 15.35 13.15 15.52C13.11 15.63 13.08 15.74 13.05 15.86C13.01 16.06 12.99 16.27 13 16.49C13 16.6 13.02 16.71 13.03 16.83C13.07 17.04 13.14 17.25 13.23 17.45C13.29 17.58 13.36 17.71 13.43 17.83C13.54 17.99 13.66 18.14 13.79 18.27L18.44 22.91C18.62 23.09 18.81 23.25 19.02 23.39C19.17 23.49 19.34 23.58 19.51 23.66C19.78 23.78 20.05 23.86 20.33 23.91C20.48 23.93 20.62 23.95 20.77 23.95C21.05 23.96 21.33 23.94 21.6 23.88C21.74 23.85 21.88 23.8 22.02 23.75C22.24 23.67 22.45 23.56 22.65 23.43C22.8 23.32 22.94 23.2 23.07 23.07C23.2 22.94 23.32 22.8 23.43 22.65C23.56 22.45 23.67 22.24 23.75 22.02C23.8 21.88 23.85 21.74 23.88 21.6C23.94 21.33 23.96 21.05 23.95 20.77C23.95 20.62 23.93 20.48 23.91 20.33C23.86 20.05 23.78 19.78 23.66 19.51C23.58 19.34 23.49 19.17 23.39 19.02C23.25 18.81 23.09 18.62 22.91 18.44L18.29 13.81L17.26 14.84ZM15.03 17.07L16.04 16.06L16.02 16.04C15.97 15.99 15.92 15.95 15.86 15.91C15.82 15.89 15.79 15.87 15.75 15.86C15.67 15.82 15.59 15.8 15.51 15.79C15.49 15.79 15.47 15.79 15.45 15.78C15.32 15.78 15.21 15.8 15.11 15.85C15.05 15.88 15 15.92 14.94 15.97C14.89 16.02 14.85 16.08 14.82 16.14C14.77 16.24 14.75 16.35 14.76 16.48C14.76 16.5 14.76 16.52 14.76 16.54C14.77 16.62 14.79 16.7 14.83 16.78C14.84 16.82 14.86 16.85 14.89 16.89C14.92 16.95 14.97 17 15.02 17.05L15.03 17.07ZM18.13 15.39L22.05 19.3C22.44 19.7 22.67 20.22 22.7 20.76C22.72 21.29 22.52 21.8 22.16 22.16C21.8 22.52 21.29 22.72 20.76 22.7C20.22 22.67 19.7 22.44 19.3 22.05L14.66 17.4C14.42 17.16 14.27 16.83 14.26 16.5C14.24 16.16 14.36 15.85 14.59 15.62C14.82 15.39 15.13 15.27 15.47 15.28C15.8 15.3 16.13 15.44 16.38 15.69L20.28 19.59C20.37 19.69 20.43 19.82 20.44 19.95C20.44 20.09 20.4 20.21 20.3 20.3C20.21 20.39 20.09 20.44 19.95 20.44C19.82 20.43 19.69 20.37 19.59 20.28L16.06 16.75L15.55 17.26L19.08 20.79C19.32 21.04 19.65 21.18 19.98 21.2C20.32 21.21 20.63 21.09 20.86 20.86C21.09 20.63 21.21 20.32 21.2 19.98C21.18 19.65 21.04 19.32 20.79 19.08L16.89 15.18C16.5 14.78 15.97 14.55 15.44 14.53C14.9 14.51 14.4 14.7 14.03 15.06C13.67 15.43 13.48 15.93 13.5 16.47C13.52 17 13.75 17.52 14.15 17.92L18.79 22.56C19.33 23.1 20.05 23.42 20.79 23.45C21.52 23.48 22.22 23.22 22.72 22.72C23.22 22.22 23.48 21.52 23.45 20.79C23.42 20.05 23.1 19.33 22.56 18.79L18.29 14.52L17.78 15.03L18.13 15.39Z\",\n    fill: \"#FFFFFF\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyPolicy);\nexport default __webpack_public_path__ + \"static/media/greyPolicy.05d784249cd5f3f92aff2ca6a3a418f7.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Post_dialog__Kr73I\",\"header\":\"Post_header__0GdG9\",\"fon\":\"Post_fon__b4dSl\",\"pomoshnikSearch\":\"Post_pomoshnikSearch__JzCUh\",\"pomoshnik\":\"Post_pomoshnik__i8HsP\",\"iconBack\":\"Post_iconBack__JOiGb\",\"search\":\"Post_search__ooW+E\",\"spanPomoshnik\":\"Post_spanPomoshnik__84+Hl\",\"editText\":\"Post_editText__O+nX2\",\"item\":\"Post_item__P3P-j\",\"itemName\":\"Post_itemName__Wo1Lr\",\"select\":\"Post_select__eZffJ\",\"div\":\"Post_div__u-W3W\",\"actionButton\":\"Post_actionButton__YkPe8\",\"iconAdd\":\"Post_iconAdd__19RXN\",\"iconSave\":\"Post_iconSave__Uc00V\",\"image\":\"Post_image__NwNMY\",\"main\":\"Post_main__mMZHv\",\"productTeaxtaera\":\"Post_productTeaxtaera__lGJMb\",\"destinyTeaxtaera\":\"Post_destinyTeaxtaera__Sm4UI\",\"Teaxtaera\":\"Post_Teaxtaera__g9dmI\",\"post\":\"Post_post__F65hk\",\"postNested\":\"Post_postNested__Yvfp0\",\"nameButton\":\"Post_nameButton__Lawk6\",\"sixth\":\"Post_sixth__q6t4k\",\"policySearch\":\"Post_policySearch__LUCW5\",\"policySearchItem\":\"Post_policySearchItem__QbOJH\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectedStatistic_modal__eakDL\",\"modalWindow\":\"ModalSelectedStatistic_modalWindow__9VnHa\",\"exit\":\"ModalSelectedStatistic_exit__WBF9p\",\"header\":\"ModalSelectedStatistic_header__eRhg7\",\"item1\":\"ModalSelectedStatistic_item1__bKleX\",\"item2\":\"ModalSelectedStatistic_item2__yCwbo\",\"search\":\"ModalSelectedStatistic_search__l620Q\",\"table\":\"ModalSelectedStatistic_table__p+d23\",\"row\":\"ModalSelectedStatistic_row__hJsy5\"};","import React from \"react\";\nimport classes from \"./ModalSelectedStatistic.module.css\";\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\nimport iconAdd from \"@image/iconAdd.svg\";\nimport exitModal from \"@image/exitModal.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\n\nexport function ModalSelectedStatistic({\n  value,\n  onChange,\n  createNewStatistic,\n  setOpenModalStatisticSave,\n  filterArraySearchModalStatistics,\n  handleChecboxChangeStatistics,\n  statisticsChecked,\n  disabledStatisticsChecked,\n  statistics,\n  openStatisticWarning,\n}) {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.modalWindow}>\n        <img\n          src={exitModal}\n          alt=\"exitStatistic\"\n          onClick={openStatisticWarning}\n          className={classes.exit}\n        />\n        <div className={classes.header}>\n          <div className={classes.item1}>\n            <input\n              type=\"search\"\n              placeholder=\"Найти\"\n              value={value}\n              onChange={onChange}\n              className={classes.search}\n            />\n          </div>\n\n          <div className={classes.item2}>\n            <ButtonImage\n              name={\"создать\"}\n              icon={iconAdd}\n              onClick={createNewStatistic}\n            ></ButtonImage>\n\n            <ButtonImage\n              name={\"сохранить\"}\n              icon={Blacksavetmp}\n              onClick={() => {\n                setOpenModalStatisticSave(true);\n              }}\n            ></ButtonImage>\n          </div>\n        </div>\n\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th>Название статистики</th>\n            </tr>\n          </thead>\n\n          {filterArraySearchModalStatistics.length > 0 ? (\n            <tbody>\n              <tr>\n                <td>\n                  {filterArraySearchModalStatistics?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() =>\n                        handleChecboxChangeStatistics(item.id, item)\n                      }\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={statisticsChecked.includes(item.id)}\n                        disabled={disabledStatisticsChecked.includes(item.id)}\n                      />\n                         {item.name}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          ) : (\n            <tbody>\n              <tr>\n                <td>\n                  {statistics?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() =>\n                        handleChecboxChangeStatistics(item.id, item)\n                      }\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={statisticsChecked.includes(item.id)}\n                        disabled={disabledStatisticsChecked.includes(item.id)}\n                      />\n                      {item.name}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"./Post.module.css\";\nimport greyPolicy from \"@image/greyPolicy.svg\";\nimport blackStatistic from \"@image/blackStatistic.svg\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport { useSelector } from \"react-redux\";\nimport ModalWindow from \"@Custom/ModalWindow.jsx\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport Select from \"@Custom/Select/Select\";\nimport Input from \"@Custom/Input/Input\";\nimport Lupa from \"@Custom/Lupa/Lupa\";\nimport { useModalSelectRadio } from \"@hooks/useModalSelectRadio\";\nimport { ModalSelectRadio } from \"@Custom/modalSelectRadio/ModalSelectRadio\";\nimport { useModalCheckBoxStatistic } from \"@hooks/useModalCheckBoxStatistic\";\nimport { ModalSelectedStatistic } from \"@Custom/modalSelectedStatistic/ModalSelectedStatistic\";\nimport { usePostsHook } from \"@hooks\";\nimport { useStatisticsHook } from \"../../../hooks/useStatisticsHook\";\nimport RoleContainer from \"./RoleContainer\";\n\nexport default function Post() {\n  const navigate = useNavigate();\n  const { postId } = useParams();\n  const newPost = () => {\n    navigate(`/pomoshnik/postNew`);\n  };\n\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\n\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  const createdId = useSelector((state) => state.post.postCreatedId);\n\n  const [postName, setPostName] = useState(null);\n  const [divisionName, setDivisionName] = useState(null);\n  const [disabledDivisionName, setDisabledDivisionName] = useState(false);\n  const [parentPostId, setParentPostId] = useState(\"\");\n  const [worker, setWorker] = useState(null);\n  const [userRole, setUserRole] = useState()\n\n  const [product, setProduct] = useState(null);\n  const [isProductChanges, setIsProductChanges] = useState(false);\n\n  const [purpose, setPurpose] = useState(null);\n  const [isPurposeChanges, setIsPurposeChanges] = useState(false);\n\n  const [selectParentPost, setSelectParentPost] = useState();\n\n  const [openModalPolicy, setOpenModalPolicy] = useState(false);\n\n  //Статистика\n  const [statisticsChecked, setStatisticsChecked] = useState([]);\n  const [disabledStatisticsChecked, setDisabledStatisticsChecked] = useState(\n    []\n  );\n  const [openModalStatistic, setOpenModalStatistic] = useState(false);\n  const [openModalStatisticWarning, setOpenModalStatisticWarning] =\n    useState(false);\n  const [openModalStatisticSave, setOpenModalStatisticSave] = useState(false);\n\n  const {\n    allPosts,\n    isLoadingGetPosts,\n    isErrorGetPosts,\n\n    currentPost,\n    workers,\n    posts,\n    parentPost,\n    policiesActive,\n    statisticsIncludedPost,\n    isLoadingGetPostId,\n    isErrorGetPostId,\n    isFetchingGetPostId,\n    selectedPolicyIDInPost,\n    selectedPolicyNameInPost,\n    refetchPostIdQuery,\n\n    roles,\n\n    updatePost,\n    isLoadingUpdatePostMutation,\n    isSuccessUpdatePostMutation,\n    isErrorUpdatePostMutation,\n    ErrorUpdatePostMutation,\n    localIsResponseUpdatePostMutation,\n  } = usePostsHook({ postId: selectedPostId });\n\n  const {\n    postStatistics,\n    isLoadingPostStatisticMutation,\n    isSuccessPostStatisticMutation,\n    isErrorPostStatisticMutation,\n    ErrorPostStatisticMutation,\n    localIsResponsePostStatisticsMutation,\n\n    updateStatisticsToPostId,\n    isLoadingStatisticsToPostIdMutation,\n    isSuccessUpdateStatisticsToPostIdMutation,\n    isErrorUpdateStatisticsToPostIdMutation,\n    ErrorUpdateStatisticsToPostIdMutation,\n    localIsResponseUpdateStatisticsToPostIdMutation,\n  } = useStatisticsHook();\n\n  const methodForLupa = (parametr) => {\n    setIsOpenSearch(parametr);\n  };\n\n  useEffect(() => {\n    if (createdId || postId) {\n      setSelectedPostId(createdId || postId);\n    }\n  }, []);\n  // Конец\n\n  useEffect(() => {\n    const obj =\n      parentPostId !== \"\"\n        ? posts?.find((item) => item.id === parentPostId)\n        : null;\n\n    setSelectParentPost(obj);\n\n    if (parentPostId && currentPost?.isHasChildPost === false) {\n      setDivisionName(obj?.divisionName || null);\n      setDisabledDivisionName(true);\n    } else {\n      setDivisionName(currentPost?.divisionName || null);\n      setDisabledDivisionName(false);\n    }\n  }, [parentPostId]);\n\n  useEffect(() => {\n    if (currentPost.postName) {\n      setPostName(currentPost.postName);\n    }\n\n    if (parentPost?.id && currentPost?.isHasChildPost === false) {\n      setDivisionName(parentPost?.divisionName);\n      setDisabledDivisionName(true);\n    } else {\n      setDivisionName(currentPost?.divisionName);\n      setDisabledDivisionName(false);\n    }\n\n    if (currentPost?.user?.id) {\n      setWorker(currentPost?.user?.id);\n    } else {\n      setWorker(null);\n    }\n\n    if (parentPost?.id) {\n      setParentPostId(parentPost?.id);\n    } else {\n      setParentPostId(\"\");\n    }\n\n    if (statisticsIncludedPost) {\n      const ids = statisticsIncludedPost.map((item) => item.id);\n      setStatisticsChecked(ids);\n      setDisabledStatisticsChecked(ids);\n    } else {\n      setStatisticsChecked([]);\n    }\n\n    if (selectedPolicyIDInPost !== null) {\n      setSelectedPolicyID(selectedPolicyIDInPost);\n      setSelectedPolicyName(selectedPolicyNameInPost);\n    }\n\n    setUserRole(currentPost.roleId)\n  }, [currentPost.id]);\n\n  const saveUpdatePost = async () => {\n    // Создаем объект с измененными полями\n    const updatedData = {};\n\n    // Проверки на изменения и отсутствие null\n    if (postName !== currentPost.postName && postName !== null) {\n      updatedData.postName = postName;\n    }\n    if (\n      divisionName !== currentPost.divisionName &&\n      divisionName !== selectParentPost?.divisionName &&\n      divisionName !== null\n    ) {\n      updatedData.divisionName = divisionName;\n    }\n    if (\n      isProductChanges ||\n      (product !== currentPost.product && product !== null)\n    ) {\n      updatedData.product = product;\n    }\n    if (\n      isPurposeChanges ||\n      (purpose !== currentPost.purpose && purpose !== null)\n    ) {\n      updatedData.purpose = purpose;\n    }\n    if (parentPostId !== parentPost?.id && parentPostId !== null) {\n      updatedData.parentId = parentPostId === \"\" ? null : parentPostId;\n    }\n\n    if (worker !== currentPost?.user?.id && worker !== null) {\n      updatedData.responsibleUserId = worker === null ? null : worker;\n    }\n\n    if (selectedPolicyID !== selectedPolicyIDInPost) {\n      updatedData.policyId =\n        selectedPolicyID === null ? null : selectedPolicyID;\n    }\n    console.log(JSON.stringify(updatedData));\n    // Проверяем, если есть данные для обновления\n    if (Object.keys(updatedData).length > 0) {\n      await updatePost({\n        _id: selectedPostId,\n        roleId: userRole,\n        ...updatedData, // отправляем только измененные поля\n      })\n        .unwrap()\n        .then(() => {})\n        .catch((error) => {\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\n        });\n    } else {\n      console.log(\"Нет изменений для обновления\");\n    }\n  };\n\n  const selectPost = (id) => {\n    setSelectedPostId(id);\n    setIsOpenSearch(false);\n  };\n\n  // Политика\n  const {\n    selectedID: selectedPolicyID,\n    setSelectedID: setSelectedPolicyID,\n\n    selectedName: selectedPolicyName,\n    setSelectedName: setSelectedPolicyName,\n\n    handleRadioChange,\n    handleInputChangeModalSearch,\n\n    filterArraySearchModal,\n    inputSearchModal,\n  } = useModalSelectRadio({ array: policiesActive, arrayItem: \"policyName\" });\n\n  useEffect(() => {\n    const ids = statisticsIncludedPost.map((item) => item.id);\n    setStatisticsChecked(ids);\n    setDisabledStatisticsChecked(ids);\n  }, [isFetchingGetPostId]);\n\n  // Статистика\n  const {\n    statistics,\n    isLoadingGetStatistics,\n    isFetchingGetStatistics,\n    isErrorGetStatistics,\n    inputSearchModalStatistics,\n    filterArraySearchModalStatistics,\n\n    handleChecboxChangeStatistics,\n    searchStatistics,\n    resetStatisticsId,\n  } = useModalCheckBoxStatistic({ openModalStatistic, setStatisticsChecked });\n\n  const saveStatisticsId = async () => {\n    const data = statisticsChecked.filter((item) => {\n      return !disabledStatisticsChecked\n        .map((disabled) => disabled)\n        .includes(item);\n    });\n    if (data.length > 0) {\n      await updateStatisticsToPostId({\n        postId: selectedPostId,\n        ids: data,\n      })\n        .unwrap()\n        .then(() => {\n          resetStatisticsId();\n          refetchPostIdQuery();\n          setOpenModalStatisticWarning(false);\n          setOpenModalStatisticSave(false);\n        })\n        .catch((error) => {\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\n        });\n    }\n  };\n\n  const exitStatistic = () => {\n    setOpenModalStatistic(false);\n    resetStatisticsId();\n  };\n\n  // Модальное окно статистики пиредупреждение что данные нужно сохранить\n  const openStatisticWarning = () => {\n    const data = statisticsChecked.filter((item) => {\n      return !disabledStatisticsChecked\n        .map((disabled) => disabled)\n        .includes(item);\n    });\n\n    if (data.length > 0) {\n      setOpenModalStatisticWarning(true);\n    } else {\n      exitStatistic();\n    }\n  };\n\n  const btnYes = () => {\n    saveStatisticsId();\n  };\n\n  const btnNo = () => {\n    setOpenModalStatisticWarning(false);\n    exitStatistic();\n  };\n\n  const btnNoSave = () => {\n    setOpenModalStatisticSave(false);\n    exitStatistic();\n  };\n\n  // Переход к созданию статистики\n  const createNewStatistic = async () => {\n    await postStatistics({\n      name: \"Статистика\",\n      postId: selectedPostId,\n    })\n      .unwrap()\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"посты\"}>\n        <BottomHeaders create={newPost} update={saveUpdatePost}>\n          <Input\n            name={\"Название поста\"}\n            value={postName}\n            onChange={setPostName}\n          >\n            <Lupa\n              setIsOpenSearch={methodForLupa}\n              isOpenSearch={isOpenSearch}\n              select={selectPost}\n              array={allPosts}\n              arrayItem={\"postName\"}\n            ></Lupa>\n          </Input>\n\n          {currentPost.id && (\n            <>\n              <Input\n                name={\"Название подразделения\"}\n                value={divisionName}\n                onChange={setDivisionName}\n                disabledPole={disabledDivisionName}\n              ></Input>\n              <Select\n                name={\"Руководитель\"}\n                value={parentPostId}\n                onChange={setParentPostId}\n                array={posts}\n                arrayItem={\"postName\"}\n              >\n                <option value=\"\"> — </option>\n              </Select>\n              <Select\n                name={\"Сотрудник\"}\n                value={worker}\n                onChange={setWorker}\n                array={workers}\n                arrayItem={\"lastName\"}\n                arrayItemTwo={\"firstName\"}\n              ></Select>\n            </>\n          )}\n        </BottomHeaders>\n      </Headers>\n\n      <div className={classes.main}>\n        {isErrorGetPosts ? (\n          <>\n            <HandlerQeury Error={isErrorGetPosts}></HandlerQeury>\n          </>\n        ) : (\n          <>\n            {isErrorGetPostId ? (\n              <HandlerQeury Error={isErrorGetPostId}></HandlerQeury>\n            ) : (\n              <>\n                <HandlerQeury Loading={isLoadingGetPosts}></HandlerQeury>\n\n                {isLoadingGetPostId || isFetchingGetPostId ? (\n                  <HandlerQeury\n                    Loading={isLoadingGetPostId}\n                    Fetching={isFetchingGetPostId}\n                  ></HandlerQeury>\n                ) : (\n                  <>\n                    {currentPost.id ? (\n                      <>\n                        <div className={classes.productTeaxtaera}>\n                          <textarea\n                            className={classes.Teaxtaera}\n                            placeholder=\"описание продукта поста\"\n                            value={\n                              isProductChanges\n                                ? product\n                                : product || currentPost.product\n                            }\n                            onChange={(e) => {\n                              setProduct(e.target.value);\n                              setIsProductChanges(true);\n                            }}\n                          />\n                        </div>\n\n                        <div className={classes.destinyTeaxtaera}>\n                          <textarea\n                            className={classes.Teaxtaera}\n                            placeholder=\"описнаие предназначения поста\"\n                            value={\n                              isPurposeChanges\n                                ? purpose\n                                : purpose || currentPost.purpose\n                            }\n                            onChange={(e) => {\n                              setPurpose(e.target.value);\n                              setIsPurposeChanges(true);\n                            }}\n                          />\n                        </div>\n\n                        <div\n                          className={classes.post}\n                          onClick={() => setOpenModalPolicy(true)}\n                        >\n                          <img src={greyPolicy} alt=\"greyPolicy\" />\n                          <div className={classes.postNested}>\n                            {selectedPolicyName ? (\n                              <span className={classes.nameButton}>\n                                Политика: {selectedPolicyName}\n                              </span>\n                            ) : (\n                              <span className={classes.nameButton}>\n                                Прикрепить политику\n                              </span>\n                            )}\n                          </div>\n                        </div>\n\n                        <div\n                          className={classes.post}\n                          onClick={() => setOpenModalStatistic(true)}\n                        >\n                          <img src={blackStatistic} alt=\"blackStatistic\" />\n\n                          {statisticsIncludedPost.length > 0 ? (\n                            <div className={classes.postNested}>\n                              <span className={classes.nameButton}>\n                                Статистики:{\" \"}\n                                {statisticsIncludedPost.map((item, index) => (\n                                  <span key={item.id}>\n                                    {item.name}\n                                    {index < statisticsIncludedPost.length - 1\n                                      ? \", \"\n                                      : \"\"}\n                                  </span>\n                                ))}\n                              </span>\n                            </div>\n                          ) : (\n                            <div>\n                              <span className={classes.nameButton}>\n                                Выбрать или создать статистику для поста\n                              </span>\n                            </div>\n                          )}\n                        </div>\n\n                        <RoleContainer rolesArray={roles} role={userRole} setRole={setUserRole}></RoleContainer>\n                        \n\n                        {openModalPolicy && (\n                          <ModalSelectRadio\n                            nameTable={\"Название политики\"}\n                            handleSearchValue={inputSearchModal}\n                            handleSearchOnChange={handleInputChangeModalSearch}\n                            handleRadioChange={handleRadioChange}\n                            exit={() => {\n                              setOpenModalPolicy(false);\n                            }}\n                            filterArray={filterArraySearchModal}\n                            array={policiesActive}\n                            arrayItem={\"policyName\"}\n                            selectedItemID={selectedPolicyID}\n                          ></ModalSelectRadio>\n                        )}\n\n                        {isErrorGetStatistics ? (\n                          <HandlerQeury\n                            Error={isErrorGetStatistics}\n                          ></HandlerQeury>\n                        ) : (\n                          <>\n                            <HandlerQeury\n                              Loading={isLoadingGetStatistics}\n                            ></HandlerQeury>\n                            {!isErrorGetStatistics && (\n                              <>\n                                {openModalStatistic && (\n                                  <ModalSelectedStatistic\n                                    value={inputSearchModalStatistics}\n                                    onChange={searchStatistics}\n                                    createNewStatistic={createNewStatistic}\n                                    setOpenModalStatisticSave={\n                                      setOpenModalStatisticSave\n                                    }\n                                    filterArraySearchModalStatistics={\n                                      filterArraySearchModalStatistics\n                                    }\n                                    handleChecboxChangeStatistics={\n                                      handleChecboxChangeStatistics\n                                    }\n                                    statisticsChecked={statisticsChecked}\n                                    disabledStatisticsChecked={\n                                      disabledStatisticsChecked\n                                    }\n                                    statistics={statistics}\n                                    openStatisticWarning={openStatisticWarning}\n                                  ></ModalSelectedStatistic>\n                                )}\n                              </>\n                            )}\n                          </>\n                        )}\n\n                        {openModalStatisticSave && (\n                          <ModalWindow\n                            text={\n                              \"При приклеплении статистики к этому посту она отвяжется у предыдущего.\"\n                            }\n                            close={setOpenModalStatisticSave}\n                            btnYes={btnYes}\n                            btnNo={btnNoSave}\n                          ></ModalWindow>\n                        )}\n\n                        {openModalStatisticWarning && (\n                          <ModalWindow\n                            text={\n                              \"У Вас имеются не сохранненые данные, нажмите на Да и даннные сохранятся.\"\n                            }\n                            close={setOpenModalStatisticWarning}\n                            btnYes={btnYes}\n                            btnNo={btnNo}\n                          ></ModalWindow>\n                        )}\n\n                        <HandlerMutation\n                          Loading={isLoadingUpdatePostMutation}\n                          Error={\n                            isErrorUpdatePostMutation &&\n                            localIsResponseUpdatePostMutation\n                          }\n                          Success={\n                            isSuccessUpdatePostMutation &&\n                            localIsResponseUpdatePostMutation\n                          }\n                          textSuccess={\"Пост обновлен\"}\n                          textError={\n                            ErrorUpdatePostMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorUpdatePostMutation.data.errors[0].errors[0]\n                              : ErrorUpdatePostMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingStatisticsToPostIdMutation}\n                          Error={\n                            isErrorUpdateStatisticsToPostIdMutation &&\n                            localIsResponseUpdateStatisticsToPostIdMutation\n                          }\n                          Success={\n                            isSuccessUpdateStatisticsToPostIdMutation &&\n                            localIsResponseUpdateStatisticsToPostIdMutation\n                          }\n                          textSuccess={\"Статистика для поста обновлена\"}\n                          textError={\n                            ErrorUpdateStatisticsToPostIdMutation?.data\n                              ?.errors?.[0]?.errors?.[0]\n                              ? ErrorUpdateStatisticsToPostIdMutation.data\n                                  .errors[0].errors[0]\n                              : ErrorUpdateStatisticsToPostIdMutation?.data\n                                  ?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingPostStatisticMutation}\n                          Error={\n                            isErrorPostStatisticMutation &&\n                            localIsResponsePostStatisticsMutation\n                          }\n                          Success={\n                            isSuccessPostStatisticMutation &&\n                            localIsResponsePostStatisticsMutation\n                          }\n                          textSuccess={\"Статистика для поста создана\"}\n                          textError={\n                            ErrorPostStatisticMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorPostStatisticMutation.data.errors[0]\n                                  .errors[0]\n                              : ErrorPostStatisticMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n                      </>\n                    ) : (\n                      <>\n                        <WaveLetters letters={\"Выберите пост\"}></WaveLetters>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSubbarSearch(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip8_4774\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip8_4774)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.33 9.33L9.8 9.33L9.61 9.15C10.41 8.21 10.83 6.94 10.6 5.59C10.29 3.73 8.74 2.26 6.87 2.03C4.05 1.68 1.68 4.05 2.03 6.87C2.25 8.74 3.73 10.29 5.59 10.6C6.94 10.83 8.21 10.41 9.15 9.61L9.33 9.8L9.33 10.33L12.16 13.16C12.43 13.43 12.88 13.43 13.15 13.16C13.43 12.89 13.43 12.44 13.15 12.17L10.33 9.33ZM6.33 9.33C4.67 9.33 3.33 7.99 3.33 6.33C3.33 4.67 4.67 3.33 6.33 3.33C7.99 3.33 9.33 4.67 9.33 6.33C9.33 7.99 7.99 9.33 6.33 9.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubbarSearch);\nexport default __webpack_public_path__ + \"static/media/subbarSearch.228587dc2f4983eef0e3a45c32fd687a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__ukhRp\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__6zWsf\",\"modalRow1\":\"ModalWindow_modalRow1__pu+1f\",\"modalRow2\":\"ModalWindow_modalRow2__KBA6s\",\"btnYes\":\"ModalWindow_btnYes__g3eEP\",\"btnNo\":\"ModalWindow_btnNo__0IBST\",\"textBtnYes\":\"ModalWindow_textBtnYes__bEP3u\",\"textBtnNo\":\"ModalWindow_textBtnNo__yJDBD\",\"text\":\"ModalWindow_text__YqzfM\",\"exitImage\":\"ModalWindow_exitImage__Bc2Og\"};","import React from \"react\";\nimport classes from \"./ModalWindow.module.css\";\nimport exit from \"../image/exitModal.svg\";\n\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\n  return (\n    <div className={classes.modalDelete}>\n      <div className={classes.modalDeleteElement}>\n        <img\n          src={exit}\n          alt=\"exit\"\n          className={classes.exitImage}\n          onClick={() => close(false)}\n        />\n        <div className={classes.modalRow1}>\n          <span className={classes.text}>{text}</span>\n        </div>\n        {!exitBtn && (\n          <div className={classes.modalRow2}>\n            <button\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\n              onClick={btnYes}\n            >\n              Да\n            </button>\n            <button\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\n              onClick={btnNo}\n            >\n              Нет\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectRadio_modal__NKc1b\",\"modalWindow\":\"ModalSelectRadio_modalWindow__5RkFz\",\"header\":\"ModalSelectRadio_header__6ISO7\",\"item1\":\"ModalSelectRadio_item1__OXY0f\",\"item2\":\"ModalSelectRadio_item2__V4lIS\",\"search\":\"ModalSelectRadio_search__asvAb\",\"exit\":\"ModalSelectRadio_exit__et8tp\",\"table\":\"ModalSelectRadio_table__ZIpre\",\"row\":\"ModalSelectRadio_row__smpE+\"};","import React from \"react\";\nimport classes from \"./ModalSelectRadio.module.css\";\nimport exitModal from \"@image/exitModal.svg\";\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\n\nexport function ModalSelectRadio({\n  nameTable,\n  handleSearchValue,\n  handleSearchOnChange,\n  exit,\n  filterArray,\n  array,\n  arrayItem,\n  selectedItemID,\n  handleRadioChange,\n  save,\n}) {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.modalWindow}>\n        <img\n          src={exitModal}\n          alt=\"exitModal\"\n          onClick={() => exit()}\n          className={classes.exit}\n        />\n\n        <div className={classes.header}>\n          <div className={classes.item1}>\n            <input\n              type=\"search\"\n              placeholder=\"Найти\"\n              value={handleSearchValue}\n              onChange={handleSearchOnChange}\n              className={classes.search}\n            />\n          </div>\n\n          {save && (\n            <div className={classes.item2}>\n              <ButtonImage\n                name={\"сохранить\"}\n                icon={Blacksavetmp}\n                onClick={save}\n              ></ButtonImage>\n            </div>\n          )}\n        </div>\n\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th>{nameTable}</th>\n            </tr>\n          </thead>\n\n          {filterArray.length > 0 ? (\n            <tbody>\n              <tr>\n                <td>\n                  {filterArray?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() => handleRadioChange(item.id, item)}\n                    >\n                      <input\n                        type=\"radio\"\n                        checked={selectedItemID === item.id}\n                      />\n                      {item[arrayItem]}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          ) : (\n            <tbody>\n              <tr>\n                <td>\n                  {array?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() => handleRadioChange(item.id, item)}\n                    >\n                      <input\n                        type=\"radio\"\n                        checked={selectedItemID === item.id}\n                      />\n                      {item[arrayItem]}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"names":["Lupa","_ref","setIsOpenSearch","isOpenSearch","select","projects","archivesProjects","projectsWithProgram","archivesProjectsWithProgram","programs","archivesPrograms","array","arrayItem","positionBottomStyle","selectRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","children","_jsx","src","subbarSearch","alt","onClick","className","classes","ul","style","bottom","length","value","disabled","activeText","map","item","id","li","projectName","completedText","ButtonAction","create","update","wrapper","ButtonImage","name","icon","iconAdd","Blacksavetmp","BottomHeaders","editText","ModalSelectedStatistic","onChange","createNewStatistic","setOpenModalStatisticSave","filterArraySearchModalStatistics","handleChecboxChangeStatistics","statisticsChecked","disabledStatisticsChecked","statistics","openStatisticWarning","modal","modalWindow","exitModal","exit","header","item1","type","placeholder","search","item2","table","row","checked","includes","Post","_ErrorUpdatePostMutat","_ErrorUpdatePostMutat2","_ErrorUpdatePostMutat3","_ErrorUpdatePostMutat4","_ErrorUpdatePostMutat5","_ErrorUpdateStatistic","_ErrorUpdateStatistic2","_ErrorUpdateStatistic3","_ErrorUpdateStatistic4","_ErrorUpdateStatistic5","_ErrorPostStatisticMu","_ErrorPostStatisticMu2","_ErrorPostStatisticMu3","_ErrorPostStatisticMu4","_ErrorPostStatisticMu5","navigate","useNavigate","postId","useParams","useState","selectedPostId","setSelectedPostId","createdId","useSelector","state","post","postCreatedId","postName","setPostName","divisionName","setDivisionName","disabledDivisionName","setDisabledDivisionName","parentPostId","setParentPostId","worker","setWorker","userRole","setUserRole","product","setProduct","isProductChanges","setIsProductChanges","purpose","setPurpose","isPurposeChanges","setIsPurposeChanges","selectParentPost","setSelectParentPost","openModalPolicy","setOpenModalPolicy","setStatisticsChecked","setDisabledStatisticsChecked","openModalStatistic","setOpenModalStatistic","openModalStatisticWarning","setOpenModalStatisticWarning","openModalStatisticSave","allPosts","isLoadingGetPosts","isErrorGetPosts","currentPost","workers","posts","parentPost","policiesActive","statisticsIncludedPost","isLoadingGetPostId","isErrorGetPostId","isFetchingGetPostId","selectedPolicyIDInPost","selectedPolicyNameInPost","refetchPostIdQuery","roles","updatePost","isLoadingUpdatePostMutation","isSuccessUpdatePostMutation","isErrorUpdatePostMutation","ErrorUpdatePostMutation","localIsResponseUpdatePostMutation","usePostsHook","postStatistics","isLoadingPostStatisticMutation","isSuccessPostStatisticMutation","isErrorPostStatisticMutation","ErrorPostStatisticMutation","localIsResponsePostStatisticsMutation","updateStatisticsToPostId","isLoadingStatisticsToPostIdMutation","isSuccessUpdateStatisticsToPostIdMutation","isErrorUpdateStatisticsToPostIdMutation","ErrorUpdateStatisticsToPostIdMutation","localIsResponseUpdateStatisticsToPostIdMutation","useStatisticsHook","obj","find","isHasChildPost","_currentPost$user","_currentPost$user2","user","ids","setSelectedPolicyID","setSelectedPolicyName","roleId","selectedID","selectedPolicyID","setSelectedID","selectedName","selectedPolicyName","setSelectedName","handleRadioChange","handleInputChangeModalSearch","filterArraySearchModal","inputSearchModal","useModalSelectRadio","isLoadingGetStatistics","isFetchingGetStatistics","isErrorGetStatistics","inputSearchModalStatistics","searchStatistics","resetStatisticsId","useModalCheckBoxStatistic","exitStatistic","btnYes","async","data","filter","unwrap","then","catch","error","console","JSON","stringify","saveStatisticsId","dialog","Headers","newPost","_currentPost$user3","updatedData","parentId","responsibleUserId","policyId","log","Object","keys","_id","Input","parametr","_Fragment","disabledPole","Select","arrayItemTwo","main","HandlerQeury","Error","Loading","Fetching","productTeaxtaera","Teaxtaera","e","destinyTeaxtaera","greyPolicy","postNested","nameButton","blackStatistic","index","RoleContainer","rolesArray","role","setRole","ModalSelectRadio","nameTable","handleSearchValue","handleSearchOnChange","filterArray","selectedItemID","ModalWindow","text","close","btnNo","btnNoSave","HandlerMutation","Success","textSuccess","textError","errors","message","WaveLetters","letters","exitBtn","modalDelete","modalDeleteElement","exitImage","modalRow1","modalRow2","textBtnYes","textBtnNo","arrayLetters","split","wave","save"],"sourceRoot":""}